@model EduSite.Models.ApplicationUser

@{
    ViewData["Title"] = "Edit User";
    var roles = ViewBag.Roles as IEnumerable<Microsoft.AspNetCore.Identity.IdentityRole>;
    var userRoles = ViewBag.UserRoles as IEnumerable<string>;
}

<div class="container mt-4">
    <h1>Edit User</h1>

    <form asp-action="Edit">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <input type="hidden" asp-for="Id" />

        <div class="mb-3">
            <label asp-for="Email" class="form-label"></label>
            <input asp-for="Email" class="form-control" />
            <span asp-validation-for="Email" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="FirstName" class="form-label"></label>
            <input asp-for="FirstName" class="form-control" />
            <span asp-validation-for="FirstName" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="LastName" class="form-label"></label>
            <input asp-for="LastName" class="form-control" />
            <span asp-validation-for="LastName" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label class="form-label">Roles</label>
            @foreach (var role in roles)
            {
                <div class="form-check">
                    <input type="checkbox" 
                           name="selectedRoles" 
                           value="@role.Name" 
                           class="form-check-input" 
                           @(userRoles.Contains(role.Name) ? "checked" : "") />
                    <label class="form-check-label">@role.Name</label>
                </div>
            }
        </div>

        <div class="mb-3">
            <input type="submit" value="Save" class="btn btn-primary" />
            <a asp-action="Index" class="btn btn-secondary">Back to List</a>
        </div>
    </form>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
